// Navbars
// ---------------------------
// Bootstrap Component

// TODO: Apply BEM to Navbars
// TODO: Apply Baseline Grid

// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
	position: relative;
	min-height: $navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
	margin-bottom: rem($navbar-margin-bottom);
	border: 1px solid transparent;
	@include gs-span(m,all);
	// Prevent floats from breaking the navbar
	@include clearfix();
	// TODO: Check this works like this
	@include gs-media(t,min) {
		border-radius: $navbar-border-radius;
	}
	// Navbar Default
	&--default {
		background-color: $navbar-default-background-color;
		border-color: $navbar-default-border-color;
	}
	.container,
	.container-fluid {
		> .navbar__header,
		> .navbar-collapse {
			margin-right: -$navbar-padding-horizontal;
			margin-left:  -$navbar-padding-horizontal;

			@include gs-media(m,max) {
				margin-right: 0;
				margin-left:  0;
			}
		}
	}
	&__header {
		@include clearfix();
		@include gs-media(d,min) {
			float: left;
		}
	}
	&__toggle {
		position: relative;
		float: right;
		margin-right: $navbar-padding-horizontal;
		padding: 9px 10px;
		@include navbar-vertical-align(34px);
		background-color: transparent;
		background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
		border: 1px solid transparent;
		border-radius: $border-radius;
		border-color: $navbar-default-toggle-border-color;
		&:hover,
		&:focus {
			background-color: $navbar-default-toggle-hover-background-color;
		}
		// We remove the `outline` here, but later compensate by attaching `:hover`
		// styles to `:focus`.
		&:focus {
			outline: none;
		}
		// Bars
		.icon-bar {
			display: block;
			width: 22px;
			height: 2px;
			border-radius: 1px;
			background-color: $navbar-default-toggle-icon-bar-background-color;
		}
		.icon-bar + .icon-bar {
			margin-top: 4px;
		}
		@include gs-media(d,min) {
			display: none;
		}
	}
	&__brand {
		float: left;
		padding: $navbar-padding-vertical $navbar-padding-horizontal;
		@include font-size($font-size-large,$line-height: true, $margin-bottom: false);
		height: $navbar-height;
		text-decoration: none;
		&:hover,
		&:focus {
			text-decoration: none;
		}
		@include gs-media(t,min) {
			.navbar > .container &,
			.navbar > .container-fluid & {
				margin-left: -$navbar-padding-horizontal;
			}
		}
	}
	&__collapse {
// 		max-height: $navbar-collapse-max-height;
		overflow-x: visible;
		padding-right: $navbar-padding-horizontal;
		padding-left:  $navbar-padding-horizontal;
		border-top: 1px solid transparent;
		box-shadow: inset 0 1px 0 rgba(255,255,255,.1);
		@include clearfix();
		-webkit-overflow-scrolling: touch;
		&.in {
			overflow-y: auto;
		}
		@include gs-media(t,min) {
			width: auto;
			border-top: 0;
			box-shadow: none;
			&.collapse {
				display: block !important;
				height: auto !important;
				padding-bottom: 0; // Override default setting
				overflow: visible !important;
			}
			&.in {
				overflow-y: visible;
			}
			// Undo the collapse side padding for navbars with containers to ensure
			// alignment of right-aligned contents.
			.navbar-fixed-top &,
			.navbar-static-top &,
			.navbar-fixed-bottom & {
				padding-left: 0;
				padding-right: 0;
			}
		}
	}
	&__nav {
		clear: both;
		margin: ($navbar-padding-vertical / 2) (-$navbar-padding-horizontal);
		> li > a {
			padding-top:    10px;
			padding-bottom: 10px;
			line-height: normal;
		}
		@include gs-media(m,max) {
			// Dropdowns get custom display when collapsed
			.open .dropdown-menu {
				position: static;
				float: none;
				width: auto;
				margin-top: 0;
				background-color: transparent;
				border: 0;
				box-shadow: none;
				> li > a,
				.dropdown-header {
					padding: 5px 15px 5px 25px;
				}
				> li > a {
					line-height: normal;
					color: $navbar-default-link-color;
					&:hover,
					&:focus {
						color: $navbar-default-link-hover-color;
						background-image: none;
						background-color: $navbar-default-link-hover-background-color;
					}
				}
				> .active > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-default-link-active-color;
						background-color: $navbar-default-link-active-background-color;
					}
				}
				> .disabled > a {
					&,
					&:hover,
					&:focus {
						color: $navbar-default-link-disabled-color;
						background-color: $navbar-default-link-disabled-background-color;
					}
				}
			}
			// Uncollapse the nav
			@include gs-media(t,min) {
				float: left;
				margin: 0;
				> li {
					float: left;
					> a {
						padding-top:    $navbar-padding-vertical;
						padding-bottom: $navbar-padding-vertical;
					}
				}
				&.navbar-right:last-child {
					margin-right: -$navbar-padding-horizontal;
				}
			}
		}
		// Menu position and menu carets
		> li .dropdown-menu {
			margin-top: 0;
			@include border-top-radius(0);
		}
	}
	// Component alignment
	@include gs-media(t,min) {
		&__right {
			float: right !important;
		}
		&__left {
			float: left !important;
		}
	}
	// Navbar form
	&__form {
		margin-left: -$navbar-padding-horizontal;
		margin-right: -$navbar-padding-horizontal;
		padding: 10px $navbar-padding-horizontal;
		border-top: 1px solid transparent;
		border-bottom: 1px solid transparent;
		$shadow: inset 0 1px 0 rgba(255,255,255,.1), 0 1px 0 rgba(255,255,255,.1);
		@include box-shadow($shadow);
		// Mixin behavior for optimum display
		@extend .form--inline;
		.controls {
			@include gs-media(t,min) {
				margin-bottom: 5px;
			}
		}
	}
}








/*
// Menu position and menu caret support for dropups via extra dropup class
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
  @include border-bottom-radius(0);
}



//
// Navbar alignment options
//
// Display the navbar across the entirety of the page or fixed it to the top or
// bottom of the page.

// Static top (unfixed, but 100% wide) navbar
/*
.navbar-static-top {
  z-index: $zindex-navbar;
  border-width: 0 0 1px;

@include gs-media(m,max) {
    border-radius: 0;
  }
}
*/

// Fix the top/bottom navbars when screen real estate supports it
/*
.navbar-fixed-top,
.navbar-fixed-bottom {
  position: fixed;
  right: 0;
  left: 0;
  z-index: $zindex-navbar-fixed;

  // Undo the rounded corners
@include gs-media(m,max) {
    border-radius: 0;
  }
}
*/
/*
.navbar-fixed-top {
  top: 0;
  border-width: 0 0 1px;
}
*/
/*
.navbar-fixed-bottom {
  bottom: 0;
  margin-bottom: 0; // override .navbar defaults
  border-width: 1px 0 0;
}
*/

















  // Vertically center in expanded, horizontal navbar
/*   @include navbar-vertical-align($input-height-base); */

  // Undo 100% width for pull classes
/*
@include gs-media(m,max) {
    width: auto;
    border: 0;
    margin-left: 0;
    margin-right: 0;
    padding-top: 0;
    padding-bottom: 0;
    @include box-shadow(none);

    // Outdent the form if last child to line up with content down the page
    &.navbar-right:last-child {
      margin-right: -$navbar-padding-horizontal;
    }
  }
*/





// Buttons in navbars
//
// Vertically center a button within a navbar (when *not* in a form).

/*
.navbar-btn {
  @include navbar-vertical-align($input-height-base);

  &.btn-sm {
    @include navbar-vertical-align($input-height-small);
  }
  &.btn-xs {
    @include navbar-vertical-align(22);
  }
}
*/


// Text in navbars
//
// Add a class to make any element properly align itself vertically within the navbars.

/*
.navbar-text {
  @include navbar-vertical-align($line-height-computed);

@include gs-media(m,max) {
    float: left;
    margin-left: $navbar-padding-horizontal;
    margin-right: $navbar-padding-horizontal;

    // Outdent the form if last child to line up with content down the page
    &.navbar-right:last-child {
      margin-right: 0;
    }
  }
}
*/

// Alternate navbars
// --------------------------------------------------

// Default navbar
/*
.navbar-default {
  background-color: $navbar-default-background-color;
  border-color: $navbar-default-border-color;

  .navbar-brand {
    color: $navbar-default-brand-color;
    &:hover,
    &:focus {
      color: $navbar-default-brand-hover-color;
      background-color: $navbar-default-brand-hover-background-color;
    }
  }

  .navbar-text {
    color: $navbar-default-color;
  }

  .navbar-nav {
    > li > a {
      color: $navbar-default-link-color;

      &:hover,
      &:focus {
        color: $navbar-default-link-hover-color;
        background-color: $navbar-default-link-hover-background-color;
      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
        color: $navbar-default-link-active-color;
        background-color: $navbar-default-link-active-background-color;
      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
        color: $navbar-default-link-disabled-color;
        background-color: $navbar-default-link-disabled-background-color;
      }
    }
  }

  .navbar-toggle {
    border-color: $navbar-default-toggle-border-color;
    &:hover,
    &:focus {
      background-color: $navbar-default-toggle-hover-background-color;
    }
    .icon-bar {
      background-color: $navbar-default-toggle-icon-bar-background-color;
    }
  }

  .navbar-collapse,
  .navbar-form {
    border-color: $navbar-default-border;
  }

  // Dropdown menu items
  .navbar-nav {
    // Remove background color from open dropdown
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: $navbar-default-link-active-background-color;
        color: $navbar-default-link-active-color;
      }
    }


  }


  // Links in navbars
  //
  // Add a class to ensure links outside the navbar nav are colored correctly.

  .navbar-link {
    color: $navbar-default-link-color;
    &:hover {
      color: $navbar-default-link-hover-color;
    }
  }

}
*/

// Inverse navbar

/*
.navbar-inverse {
  background-color: $navbar-inverse-background-color;
  border-color: $navbar-inverse-border-color;

  .navbar-brand {
    color: $navbar-inverse-brand-color;
    &:hover,
    &:focus {
      color: $navbar-inverse-brand-hover-color;
      background-color: $navbar-inverse-brand-hover-background-color;
    }
  }

  .navbar-text {
    color: $navbar-inverse-color;
  }

  .navbar-nav {
    > li > a {
      color: $navbar-inverse-link-color;

      &:hover,
      &:focus {
        color: $navbar-inverse-link-hover-color;
        background-color: $navbar-inverse-link-hover-background-color;
      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
        color: $navbar-inverse-link-active-color;
        background-color: $navbar-inverse-link-active-background-color;
      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
        color: $navbar-inverse-link-disabled-color;
        background-color: $navbar-inverse-link-disabled-background-color;
      }
    }
  }

  // Darken the responsive nav toggle
  .navbar-toggle {
    border-color: $navbar-inverse-toggle-border-color;
    &:hover,
    &:focus {
      background-color: $navbar-inverse-toggle-hover-background-color;
    }
    .icon-bar {
      background-color: $navbar-inverse-toggle-icon-bar-background-color;
    }
  }

  .navbar-collapse,
  .navbar-form {
    border-color: darken($navbar-inverse-background-color, 7%);
  }

  // Dropdowns
  .navbar-nav {
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: $navbar-inverse-link-active-background-color;
        color: $navbar-inverse-link-active-color;
      }
    }

    @media (max-width: $grid-float-breakpoint-max) {
      // Dropdowns get custom display
      .open .dropdown-menu {
        > .dropdown-header {
          border-color: $navbar-inverse-border-color;
        }
        .divider {
          background-color: $navbar-inverse-border-color;
        }
        > li > a {
          color: $navbar-inverse-link-color;
          &:hover,
          &:focus {
            color: $navbar-inverse-link-hover-color;
            background-color: $navbar-inverse-link-hover-background-color;
          }
        }
        > .active > a {
          &,
          &:hover,
          &:focus {
            color: $navbar-inverse-link-active-color;
            background-color: $navbar-inverse-link-active-background-color;
          }
        }
        > .disabled > a {
          &,
          &:hover,
          &:focus {
            color: $navbar-inverse-link-disabled-color;
            background-color: $navbar-inverse-link-disabled-background-color
          }
        }
      }
    }
  }

  .navbar-link {
    color: $navbar-inverse-link-color;
    &:hover {
      color: $navbar-inverse-link-hover-color;
    }
  }

}
*/
